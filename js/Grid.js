/**
 * Created by Marcus on 21/06/2017.
 */
function Grid(){
    this.grids = [
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,3,3,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,3,3,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,2,2,1,1,1,0,0,4,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,2,2,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ],
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,2,2,1],
            [1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,2,2,1],
            [1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,4,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,3,3,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,3,3,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ],
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,3,3,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,3,3,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,4,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1],
            [1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1],
            [1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,2,2,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,2,2,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ]
    ];
    this.level = 0;
    this.grid = this.grids[this.level];

    this.qtd_item_linha  = this.grid.length;
    this.qtd_item_coluna = this.grid[0].length;
    var img_piso = new Image();
    img_piso.src = './img/piso.png';
    this.piso = img_piso;

    var vida = new Image();
    vida.src = './img/bomba.png';
    this.vida = vida;

    var pisoIni = new Image();
    pisoIni.src = './img/piso_inicio.png';
    this.pisoIni = pisoIni;

    var pisoFim = new Image();
    pisoFim.src = './img/piso_fim.png';
    this.pisoFim = pisoFim;
    this.vidas = 3;
    this.nivel = 2;
    this.dt_total = 0;

}

Grid.prototype.desenha = function(contexto){
    for(var x = 0; x < this.qtd_item_linha; x++){
        for(var y = 0; y < this.qtd_item_coluna; y++){
            if(this.grid[x][y] == 1){
                contexto.drawImage(this.piso,y * 32, x * 32);
            }
            if(this.grid[x][y] == 2){
                contexto.drawImage(this.pisoIni,y * 32, x * 32);
            }
            if(this.grid[x][y] == 3){
                contexto.drawImage(this.pisoFim,y * 32, x * 32);
            }

            if(this.grid[x][y] == 4){
                contexto.drawImage(this.vida,y * 32, x * 32);
            }
        }
    }
    this.nivel = this.level + 1;
}

Grid.prototype.andar = function (player) {

    var posicao_x_antes  = Math.floor((player.x - 16) / 32);
    var posicao_x_depois = Math.floor((player.x + 16) / 32);
    var posicao_y_antes  = Math.floor((player.y - 16) / 32);
    var posicao_y_depois = Math.floor((player.y + 16) / 32);

    if(player.direcao == 4 && (this.grid[posicao_y_antes][posicao_x_antes] === 1 || this.grid[posicao_y_depois][posicao_x_antes] === 1)){
        player.direcao = 0;
    }else if(player.direcao == 8 && (this.grid[posicao_y_antes][posicao_x_antes] === 1 || this.grid[posicao_y_antes][posicao_x_depois] === 1)){
        player.direcao = 0;
    }else if(player.direcao == 6 && (this.grid[posicao_y_depois][posicao_x_depois] === 1 || this.grid[posicao_y_antes][posicao_x_depois] === 1)){
        player.direcao = 0;
    }else if(player.direcao == 2 && (this.grid[posicao_y_depois][posicao_x_depois] === 1 || this.grid[posicao_y_depois][posicao_x_antes] === 1)){
        player.direcao = 0;
    }
    if(this.grid[Math.floor(player.y / 32)][Math.floor(player.x / 32)] === 3){
        this.level += 1;
        if(this.level > 2){
            alert("VocÃª chegou ao final, parabens !");
            location.reload();
        }
        this.grid = this.grids[this.level];
    }
}

Grid.prototype.colisaoRecarga = function(player){
    var x  = Math.floor(player.x / 32);
    var y  = Math.floor(player.y / 32);

    if(this.grid[y][x] == 4){
        grid.dt_total -= 30;
        var linhas = new Array();
        for(var i=0; i<this.qtd_item_linha; i++){
            colunas = new Array();
            for(var j=0;j<this.qtd_item_coluna; j++){
                if(y == i && x == j){
                    colunas.push(0);
                }else{
                    colunas.push(this.grid[i][j]);
                }

            }
            linhas.push(colunas)
        }
        this.grid = linhas;
    }

}